{"version":3,"sources":["DataSource.js"],"names":[],"mappings":";;;;;;IAAM,UAAU;AACD,aADT,UAAU,CACA,OAAO,EAAE;8BADnB,UAAU;;AAER,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AAC5B,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;iBALC,UAAU;;eAON,kBAAG;AACL,mBAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SACrC;;;eAEM,mBAAG;AACN,mBAAO,IAAI,CAAC,IAAI,CAAC;SACpB;;;eAEI,iBAAG;;;AACJ,kBAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CACjB,IAAI,CAAC,UAAC,QAAQ,EAAK;AAChB,wBAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI,EAAI;AAC1B,0BAAK,IAAI,GAAG,IAAI,CAAC;AACjB,wBAAI,MAAM,GAAG,MAAK,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;AACzC,wBAAI,UAAU,GAAG,MAAK,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC7C,0BAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;iBACtC,CAAC,CAAC;aACN,CAAC,SACI,CAAC,UAAC,GAAG,EAAI;AACX,oBAAI,MAAM,GAAG,MAAK,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,oBAAI,UAAU,GAAG,MAAK,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC1C,sBAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;aACtC,CAAC,CAAC;SAEV;;;eAES,sBAAG;AACT,gBAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;AACpD,uBAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAA;aACrC,MAAM;AACH,uBAAO,EAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,eAAe,EAAC,CAAA;aACxD;SACJ;;;eAEM,mBAAG;AACN,gBAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;AAClD,uBAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAA;aACnC,MAAM;AACH,uBAAO,EAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,cAAc,EAAC,CAAA;aACvD;SACJ;;;WA/CC,UAAU","file":"DataSource-compiled.js","sourcesContent":["class DataSource {\n    constructor(options) {\n        this.options = options;\n        this.url = this.options.url;\n        this.data = null;\n    }\n\n    toJSON() {\n        return JSON.parse(this.getData());\n    }\n\n    getData() {\n        return this.data;\n    }\n\n    fetch() {\n        window.fetch(this.url)\n            .then((response) => {\n                response.json().then((json)=> {\n                    this.data = json;\n                    let method = this.getSuccess()['method'];\n                    let parameters = this.getSuccess()['params'];\n                    method.apply(method, [parameters]);\n                });\n            })\n            .catch((err)=> {\n                let method = this.getFail()['method'];\n                let parameters = this.getFail()['params'];\n                method.apply(method, [parameters]);\n            });\n\n    }\n\n    getSuccess() {\n        if (this.options.events && this.options.events.success) {\n            return this.options.events.success\n        } else {\n            return {method: console.log, params: 'fetch success'}\n        }\n    }\n\n    getFail() {\n        if (this.options.events && this.options.events.error) {\n            return this.options.events.error\n        } else {\n            return {method: console.log, params: 'fetch failed'}\n        }\n    }\n\n}"]}